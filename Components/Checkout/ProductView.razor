@namespace TrouvailleFrontend.Components.Checkout

<div class="product-view main-container-style">
    <img class="product-picture center-flex" src="data:image/png;base64,@Picture.ImageData" alt="Image loading Error"
        onerror="this.src='/assets/images/imageError.png';" />
    <div class="name">
        <p>@Name</p>
    </div>
    <div>
        <p>Price: @_priceCalculated<br />
            <sub>per item: @_price</sub>
        </p>
    </div>
    <div>
        <p>In Shopping cart:<br />
            @Cardinality
        </p>
    </div>
    <div>
        <p>Availability:<br />
            <sub>@_stock</sub>
        </p>
    </div>

    @if (Stock <= 0)
    {
        <div class="warning">
            <i class="fas fa-exclamation-triangle"></i>
        </div>
    }

</div>

@code{
    private string _stock;
    private string _priceCalculated;
    private string _price;
    [Parameter]
    public string Name { get; set; }
    [Parameter]
    public int Stock { get; set; }
    [Parameter]
    public decimal Price { get; set; }
    [Parameter]
    public int Cardinality { get; set; }
    [Parameter]
    public PictureModel Picture { get; set; }

    protected override void OnInitialized()
    {
        _priceCalculated = CurencyManager.ParseToCurency(Price * Cardinality);
        _price = CurencyManager.ParseToCurency(Price);
        _stock = StockConverter.ParseStockToString(Stock);
    }

    protected override void OnParametersSet()
    {
        if (Picture == null) Picture = new() { ImageData = "fucking fuck" };
    }
}