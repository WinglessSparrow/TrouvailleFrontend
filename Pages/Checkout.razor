@page "/checkout"

@using TrouvailleFrontend.Shared.Models
@using TrouvailleFrontend.Shared.Classes
@using TrouvailleFrontend.Components.Checkout
@using System.Net.Http

@inject ILocalStorage local
@inject HttpClient http

<div class="page">
    <div class="content">

        @* TODO, make it work *@

        <EditForm Model="@_order" OnValidSubmit="PostOrder">
            @* <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="addresses"> *@
            @* <Address AddressFor="Invoice Address" @bind-AddressM="_order.InvoiceAddress" /> *@
            <Address AddressFor="Delivery Address" @bind-AddressM="_order.DeliveryAddress" />
            @* </div>
                <div class="payment">
                </div>
                <div class="sent-methode">
                </div>
                <div class="products-view">
                </div>*@
            <button type="submit">gg</button>
            @* <InputText @bind-Value="_order.DeliveryAddress.CityName" @bind-Value:event="oninput"/> *@
            @* <InputText @bind-Value="_order.DeliveryAddress.CityName"
                @bind-Value-oninput="_order.DeliveryAddress.CityName"/> *@
        </EditForm>
    </div>
    <div class="side-menu">
        @* <div class="sticky-container"></div> *@
    </div>
</div>


@code{
    @* public EventCallback<AddressModel> AddressMChanged { get; set; } *@

    private OrderModel _order = new();
    private List<ShoppingCartItemModel> _products { get; set; }
    protected override async Task OnInitializedAsync()
    {
        _products = await local.GetStorageAsync<List<ShoppingCartItemModel>>("shoppingCart");
    }
    protected async Task PostOrder()
    {
        Console.WriteLine(_order.DeliveryAddress);
    }
}